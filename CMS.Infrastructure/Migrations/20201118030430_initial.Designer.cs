// <auto-generated />
using System;
using CMS.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CMS.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201118030430_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CMS.Core.Entities.BaiTestTuyenDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaiThiId")
                        .HasColumnType("int");

                    b.Property<int?>("BaiTuyenDungId")
                        .HasColumnType("int");

                    b.Property<string>("DiemPass")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaiThiId");

                    b.HasIndex("BaiTuyenDungId");

                    b.ToTable("LoaiCongViec");
                });

            modelBuilder.Entity("CMS.Core.Entities.BaiThi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaBaoKetQua")
                        .HasColumnType("bit");

                    b.Property<bool>("DaChamDiem")
                        .HasColumnType("bit");

                    b.Property<bool>("DaNopBai")
                        .HasColumnType("bit");

                    b.Property<int>("DeThiId")
                        .HasColumnType("int");

                    b.Property<int?>("HocVienId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCham")
                        .HasColumnType("date");

                    b.Property<string>("TaiKhoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianHoanThanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TongDiemCham")
                        .HasColumnType("float");

                    b.Property<double?>("TongDiemToiDa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DeThiId");

                    b.HasIndex("HocVienId");

                    b.ToTable("BaiThi");
                });

            modelBuilder.Entity("CMS.Core.Entities.BaiTuyenDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DoanhNghiepId")
                        .HasColumnType("int");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KinhNghiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MucLuong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NganhNghe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayDang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuyenLoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoLuongTuyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThanhPho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianThuViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhChatCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrinhDo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoanhNghiepId");

                    b.ToTable("BaiTuyenDung");
                });

            modelBuilder.Entity("CMS.Core.Entities.BangCapUngVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CVUngVienId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCap")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenBang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CVUngVienId");

                    b.ToTable("BangCapUngVien");
                });

            modelBuilder.Entity("CMS.Core.Entities.BaoCao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChiTietCongViecId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThanhVienDuAnId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietCongViecId");

                    b.HasIndex("ThanhVienDuAnId");

                    b.ToTable("BaoCao");
                });

            modelBuilder.Entity("CMS.Core.Entities.CVUngVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MucTieuCaNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgaySinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoThich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UngVienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UngVienId");

                    b.ToTable("CVUngVien");
                });

            modelBuilder.Entity("CMS.Core.Entities.CauHinhDoKho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DaoDapAn")
                        .HasColumnType("bit");

                    b.Property<int>("DeThiId")
                        .HasColumnType("int");

                    b.Property<double>("Diem")
                        .HasColumnType("float");

                    b.Property<int?>("MucDoId")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongCauHoi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeThiId");

                    b.HasIndex("MucDoId");

                    b.ToTable("CauHinhDoKho");
                });

            modelBuilder.Entity("CMS.Core.Entities.CauHoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DangCauHoiId")
                        .HasColumnType("int");

                    b.Property<string>("GiaTriDapAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HauTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KhoCauHoiId")
                        .HasColumnType("int");

                    b.Property<string>("KyHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MucDoId")
                        .HasColumnType("int");

                    b.Property<string>("TenCauHoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TienTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DangCauHoiId");

                    b.HasIndex("KhoCauHoiId");

                    b.HasIndex("MucDoId");

                    b.ToTable("CauHoi");
                });

            modelBuilder.Entity("CMS.Core.Entities.ChiTietBaiThi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaiThiId")
                        .HasColumnType("int");

                    b.Property<int>("CauHoiId")
                        .HasColumnType("int");

                    b.Property<string>("CauTraLoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiemCham")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BaiThiId");

                    b.HasIndex("CauHoiId");

                    b.ToTable("ChiTietBaiThi");
                });

            modelBuilder.Entity("CMS.Core.Entities.ChiTietCongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CongViecId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChiTietCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CongViecId");

                    b.HasIndex("TrangThaiId");

                    b.ToTable("ChiTietCongViec");
                });

            modelBuilder.Entity("CMS.Core.Entities.ChiTietDapAnDeThi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChiTietDeThiId")
                        .HasColumnType("int");

                    b.Property<int>("DapAnCauHoiId")
                        .HasColumnType("int");

                    b.Property<int>("ThuTuMoi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietDeThiId");

                    b.HasIndex("DapAnCauHoiId");

                    b.ToTable("ChiTietDapAnDeThi");
                });

            modelBuilder.Entity("CMS.Core.Entities.ChiTietDeThi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BatBuocTraLoi")
                        .HasColumnType("bit");

                    b.Property<int>("CauHoiId")
                        .HasColumnType("int");

                    b.Property<bool>("DaoDapAn")
                        .HasColumnType("bit");

                    b.Property<int>("DeThiId")
                        .HasColumnType("int");

                    b.Property<double>("DiemToiDa")
                        .HasColumnType("float");

                    b.Property<string>("GiaTriPhuThuoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HienThiSoThuTu")
                        .HasColumnType("bit");

                    b.Property<int?>("PhuThuocVaoCauHoiId")
                        .HasColumnType("int");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CauHoiId");

                    b.HasIndex("DeThiId");

                    b.ToTable("ChiTietDeThi");
                });

            modelBuilder.Entity("CMS.Core.Entities.CongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DoUuTien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DuAnId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiCongViecId")
                        .HasColumnType("int");

                    b.Property<string>("MoTaCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHoanThanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThanhVienDuAnId")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiId")
                        .HasColumnType("int");

                    b.Property<double>("TyLeHoanThanh")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.HasIndex("LoaiCongViecId");

                    b.HasIndex("ThanhVienDuAnId");

                    b.HasIndex("TrangThaiId");

                    b.ToTable("CongViec");
                });

            modelBuilder.Entity("CMS.Core.Entities.DangCauHoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenDangCauHoi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DangCauHoi");
                });

            modelBuilder.Entity("CMS.Core.Entities.DanhGiaChungUngVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DanhGiaChungCuaHvit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UngVienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UngVienId");

                    b.ToTable("DanhGiaChungUngVien");
                });

            modelBuilder.Entity("CMS.Core.Entities.DapAnCauHoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CauHoiId")
                        .HasColumnType("int");

                    b.Property<string>("GiaTri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDapAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CauHoiId");

                    b.ToTable("DapAnCauHoi");
                });

            modelBuilder.Entity("CMS.Core.Entities.DeThi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BaoNgayKetQua")
                        .HasColumnType("bit");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HienThiSoThuTu")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowPublic")
                        .HasColumnType("bit");

                    b.Property<bool>("LaVoHanHieuLuc")
                        .HasColumnType("bit");

                    b.Property<int?>("LinhVucThiId")
                        .HasColumnType("int");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaRobots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PhuongThucTao")
                        .HasColumnType("int");

                    b.Property<int?>("SoCau")
                        .HasColumnType("int");

                    b.Property<string>("TenDeThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianHieuLuc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThoiGianLamBai")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiXuatBan")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinhVucThiId");

                    b.ToTable("DeThi");
                });

            modelBuilder.Entity("CMS.Core.Entities.DoanhNghiep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiThieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoDoanhNghiep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayUngTuyen")
                        .HasColumnType("datetime2");

                    b.Property<string>("SĐT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDoanhNghiep")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DoanhNghiep");
                });

            modelBuilder.Entity("CMS.Core.Entities.DuAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDuAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DuAn");
                });

            modelBuilder.Entity("CMS.Core.Entities.HienThiDeThi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeThiId")
                        .HasColumnType("int");

                    b.Property<int?>("KhoaHocId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeThiId");

                    b.ToTable("HienThiDeThi");
                });

            modelBuilder.Entity("CMS.Core.Entities.HocVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool?>("BietQuaFaceBook")
                        .HasColumnType("bit");

                    b.Property<bool?>("BietQuaGioiThieu")
                        .HasColumnType("bit");

                    b.Property<bool?>("BietQuaWeb")
                        .HasColumnType("bit");

                    b.Property<string>("Cmtnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DaDienDu")
                        .HasColumnType("bit");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkAnhCaNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkAnhMatSau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkAnhMatTruoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkFaceBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkSkype")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LinkZalo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("NamThu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("Date");

                    b.Property<int?>("QuanHuyenId")
                        .HasColumnType("int");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiGioiThieu")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("TinhThanhId")
                        .HasColumnType("int");

                    b.Property<int?>("TruongDaiHocId")
                        .HasColumnType("int");

                    b.Property<int?>("XaPhuongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuanHuyenId");

                    b.HasIndex("TinhThanhId");

                    b.HasIndex("TruongDaiHocId");

                    b.HasIndex("XaPhuongId");

                    b.ToTable("HocVien");
                });

            modelBuilder.Entity("CMS.Core.Entities.KhoCauHoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KyHieuKho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhoCauHoi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhoCauHoi");
                });

            modelBuilder.Entity("CMS.Core.Entities.KyNang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NhomKyNangId")
                        .HasColumnType("int");

                    b.Property<string>("TenKyNang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NhomKyNangId");

                    b.ToTable("KyNang");
                });

            modelBuilder.Entity("CMS.Core.Entities.KyNangUngVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HvitDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HvitRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KyNangId")
                        .HasColumnType("int");

                    b.Property<string>("TuDanhGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UngVienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KyNangId");

                    b.HasIndex("UngVienId");

                    b.ToTable("KyNangUngVien");
                });

            modelBuilder.Entity("CMS.Core.Entities.LichSuChiTietCongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChiTietCongViecId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThanhVienDuAnId")
                        .HasColumnType("int");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietCongViecId");

                    b.HasIndex("ThanhVienDuAnId");

                    b.HasIndex("TrangThaiId");

                    b.ToTable("LichSuChiTietCongViec");
                });

            modelBuilder.Entity("CMS.Core.Entities.LinhVucThi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenLinhVucThi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LinhVucThi");
                });

            modelBuilder.Entity("CMS.Core.Entities.LoaiCongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenLoaiCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiCongViec1");
                });

            modelBuilder.Entity("CMS.Core.Entities.LoaiYeuCau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenLoaiYeuCau")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiYeuCau");
                });

            modelBuilder.Entity("CMS.Core.Entities.MucDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenMucDo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MucDo");
                });

            modelBuilder.Entity("CMS.Core.Entities.NguonDeThi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeThiId")
                        .HasColumnType("int");

                    b.Property<int>("KhoCauHoiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeThiId");

                    b.HasIndex("KhoCauHoiId");

                    b.ToTable("NguonDeThi");
                });

            modelBuilder.Entity("CMS.Core.Entities.NhomKyNang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenNhomKyNang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NhomKyNang");
                });

            modelBuilder.Entity("CMS.Core.Entities.PhanViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CongViecId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayPhanViec")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThanhVienDuAnId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CongViecId");

                    b.HasIndex("ThanhVienDuAnId");

                    b.ToTable("PhanViec");
                });

            modelBuilder.Entity("CMS.Core.Entities.QuaTrinhHocTap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CVUngVienId")
                        .HasColumnType("int");

                    b.Property<string>("ChuyenNganh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiHocTap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CVUngVienId");

                    b.ToTable("QuaTrinhHocTap");
                });

            modelBuilder.Entity("CMS.Core.Entities.QuaTrinhLamDuAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CVUngVienId")
                        .HasColumnType("int");

                    b.Property<string>("KyNang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaNganDuAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCongTy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViTri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CVUngVienId");

                    b.ToTable("QuaTrinhLamDuAn");
                });

            modelBuilder.Entity("CMS.Core.Entities.QuanHuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenQuanHuyen")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TinhThanhId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TinhThanhId");

                    b.ToTable("QuanHuyen");
                });

            modelBuilder.Entity("CMS.Core.Entities.Quyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenQuyen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quyen");
                });

            modelBuilder.Entity("CMS.Core.Entities.QuyenDuAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DuAnId")
                        .HasColumnType("int");

                    b.Property<int?>("QuyenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.HasIndex("QuyenId");

                    b.ToTable("QuyenDuAn");
                });

            modelBuilder.Entity("CMS.Core.Entities.ThanhVienDuAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HocVienId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayThamGia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QuyenDuAnId")
                        .HasColumnType("int");

                    b.Property<int?>("UngVienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HocVienId");

                    b.HasIndex("QuyenDuAnId");

                    b.HasIndex("UngVienId");

                    b.ToTable("ThanhVienDuAn");
                });

            modelBuilder.Entity("CMS.Core.Entities.TinhThanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTinhThanh")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("TinhThanh");
                });

            modelBuilder.Entity("CMS.Core.Entities.TrangThai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrangThai");
                });

            modelBuilder.Entity("CMS.Core.Entities.TrangThaiDuAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DuAnId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrangThaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.HasIndex("TrangThaiId");

                    b.ToTable("TrangThaiDuAn");
                });

            modelBuilder.Entity("CMS.Core.Entities.TruongDaiHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTruongDaiHoc")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("TruongDaiHoc");
                });

            modelBuilder.Entity("CMS.Core.Entities.UngTuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaiTuyenDungId")
                        .HasColumnType("int");

                    b.Property<string>("DanhGiaCuaNhaTuyenDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetQua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayUngTuyen")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UngVienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaiTuyenDungId");

                    b.HasIndex("UngVienId");

                    b.ToTable("UngTuyen");
                });

            modelBuilder.Entity("CMS.Core.Entities.UngVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool?>("BietQuaFaceBook")
                        .HasColumnType("bit");

                    b.Property<bool?>("BietQuaGioiThieu")
                        .HasColumnType("bit");

                    b.Property<bool?>("BietQuaWeb")
                        .HasColumnType("bit");

                    b.Property<string>("Cmtnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DaDienDu")
                        .HasColumnType("bit");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkAnhCaNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkAnhMatSau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkAnhMatTruoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkFaceBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkSkype")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LinkZalo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("NamThu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("Date");

                    b.Property<int?>("QuanHuyenId")
                        .HasColumnType("int");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiGioiThieu")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("TinhThanhId")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiId")
                        .HasColumnType("int");

                    b.Property<int?>("TruongDaiHocId")
                        .HasColumnType("int");

                    b.Property<int?>("XaPhuongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuanHuyenId");

                    b.HasIndex("TinhThanhId");

                    b.HasIndex("TrangThaiId");

                    b.HasIndex("TruongDaiHocId");

                    b.HasIndex("XaPhuongId");

                    b.ToTable("UngVien");
                });

            modelBuilder.Entity("CMS.Core.Entities.UngVienLamBaiTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaiTestTuyenDungId")
                        .HasColumnType("int");

                    b.Property<string>("KetQua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UngVienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaiTestTuyenDungId");

                    b.HasIndex("UngVienId");

                    b.ToTable("UngVienLamBaiTest");
                });

            modelBuilder.Entity("CMS.Core.Entities.XaPhuong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuanHuyenId")
                        .HasColumnType("int");

                    b.Property<string>("TenXaPhuong")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("QuanHuyenId");

                    b.ToTable("XaPhuong");
                });

            modelBuilder.Entity("CMS.Core.Entities.YeuCau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaiTuyenDungId")
                        .HasColumnType("int");

                    b.Property<string>("GiaTriNoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriSoDen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriSoTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoaiYeuCauId")
                        .HasColumnType("int");

                    b.Property<string>("TenYeuCau")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaiTuyenDungId");

                    b.HasIndex("LoaiYeuCauId");

                    b.ToTable("YeuCau");
                });

            modelBuilder.Entity("CMS.Infrastructure.Data.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("CMS.Infrastructure.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("CMS.Infrastructure.Data.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CMS.Core.Entities.BaiTestTuyenDung", b =>
                {
                    b.HasOne("CMS.Core.Entities.BaiThi", "BaiThi")
                        .WithMany("BaiTestTuyenDung")
                        .HasForeignKey("BaiThiId");

                    b.HasOne("CMS.Core.Entities.BaiTuyenDung", "BaiTuyenDung")
                        .WithMany()
                        .HasForeignKey("BaiTuyenDungId");
                });

            modelBuilder.Entity("CMS.Core.Entities.BaiThi", b =>
                {
                    b.HasOne("CMS.Core.Entities.DeThi", "DeThi")
                        .WithMany("BaiThi")
                        .HasForeignKey("DeThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Core.Entities.HocVien", "HocVien")
                        .WithMany()
                        .HasForeignKey("HocVienId");
                });

            modelBuilder.Entity("CMS.Core.Entities.BaiTuyenDung", b =>
                {
                    b.HasOne("CMS.Core.Entities.DoanhNghiep", "DoanhNghiep")
                        .WithMany("BaiTuyenDung")
                        .HasForeignKey("DoanhNghiepId");
                });

            modelBuilder.Entity("CMS.Core.Entities.BangCapUngVien", b =>
                {
                    b.HasOne("CMS.Core.Entities.CVUngVien", "CVUngVien")
                        .WithMany("BangCapUngVien")
                        .HasForeignKey("CVUngVienId");
                });

            modelBuilder.Entity("CMS.Core.Entities.BaoCao", b =>
                {
                    b.HasOne("CMS.Core.Entities.ChiTietCongViec", "ChiTietCongViec")
                        .WithMany("BaoCao")
                        .HasForeignKey("ChiTietCongViecId");

                    b.HasOne("CMS.Core.Entities.ThanhVienDuAn", "ThanhVienDuAn")
                        .WithMany("BaoCao")
                        .HasForeignKey("ThanhVienDuAnId");
                });

            modelBuilder.Entity("CMS.Core.Entities.CVUngVien", b =>
                {
                    b.HasOne("CMS.Core.Entities.UngVien", "UngVien")
                        .WithMany("CVUngVien")
                        .HasForeignKey("UngVienId");
                });

            modelBuilder.Entity("CMS.Core.Entities.CauHinhDoKho", b =>
                {
                    b.HasOne("CMS.Core.Entities.DeThi", "DeThi")
                        .WithMany("CauHinhDoKho")
                        .HasForeignKey("DeThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Core.Entities.MucDo", "MucDo")
                        .WithMany()
                        .HasForeignKey("MucDoId");
                });

            modelBuilder.Entity("CMS.Core.Entities.CauHoi", b =>
                {
                    b.HasOne("CMS.Core.Entities.DangCauHoi", "DangCauHoi")
                        .WithMany()
                        .HasForeignKey("DangCauHoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Core.Entities.KhoCauHoi", "KhoCauHoi")
                        .WithMany("CauHoi")
                        .HasForeignKey("KhoCauHoiId");

                    b.HasOne("CMS.Core.Entities.MucDo", "MucDo")
                        .WithMany("CauHoi")
                        .HasForeignKey("MucDoId");
                });

            modelBuilder.Entity("CMS.Core.Entities.ChiTietBaiThi", b =>
                {
                    b.HasOne("CMS.Core.Entities.BaiThi", "BaiThi")
                        .WithMany("ChiTietBaiThi")
                        .HasForeignKey("BaiThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Core.Entities.CauHoi", "CauHoi")
                        .WithMany()
                        .HasForeignKey("CauHoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CMS.Core.Entities.ChiTietCongViec", b =>
                {
                    b.HasOne("CMS.Core.Entities.CongViec", "CongViec")
                        .WithMany("ChiTietCongViec")
                        .HasForeignKey("CongViecId");

                    b.HasOne("CMS.Core.Entities.TrangThai", "TrangThai")
                        .WithMany("ChiTietCongViec")
                        .HasForeignKey("TrangThaiId");
                });

            modelBuilder.Entity("CMS.Core.Entities.ChiTietDapAnDeThi", b =>
                {
                    b.HasOne("CMS.Core.Entities.ChiTietDeThi", "ChiTietDeThi")
                        .WithMany("ChiTietDapAnDeThi")
                        .HasForeignKey("ChiTietDeThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Core.Entities.DapAnCauHoi", "DapAnCauHoi")
                        .WithMany("ChiTietDapAnDeThi")
                        .HasForeignKey("DapAnCauHoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CMS.Core.Entities.ChiTietDeThi", b =>
                {
                    b.HasOne("CMS.Core.Entities.CauHoi", "CauHoi")
                        .WithMany()
                        .HasForeignKey("CauHoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Core.Entities.DeThi", "DeThi")
                        .WithMany("ChiTietDeThi")
                        .HasForeignKey("DeThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CMS.Core.Entities.CongViec", b =>
                {
                    b.HasOne("CMS.Core.Entities.DuAn", "DuAn")
                        .WithMany("CongViec")
                        .HasForeignKey("DuAnId");

                    b.HasOne("CMS.Core.Entities.LoaiCongViec", "LoaiCongViec")
                        .WithMany("CongViec")
                        .HasForeignKey("LoaiCongViecId");

                    b.HasOne("CMS.Core.Entities.ThanhVienDuAn", "ThanhVienDuAn")
                        .WithMany("CongViec")
                        .HasForeignKey("ThanhVienDuAnId");

                    b.HasOne("CMS.Core.Entities.TrangThai", "TrangThai")
                        .WithMany("CongViec")
                        .HasForeignKey("TrangThaiId");
                });

            modelBuilder.Entity("CMS.Core.Entities.DanhGiaChungUngVien", b =>
                {
                    b.HasOne("CMS.Core.Entities.UngVien", "UngVien")
                        .WithMany("DanhGiaChungUngVien")
                        .HasForeignKey("UngVienId");
                });

            modelBuilder.Entity("CMS.Core.Entities.DapAnCauHoi", b =>
                {
                    b.HasOne("CMS.Core.Entities.CauHoi", "CauHoi")
                        .WithMany("DapAnCauHoi")
                        .HasForeignKey("CauHoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CMS.Core.Entities.DeThi", b =>
                {
                    b.HasOne("CMS.Core.Entities.LinhVucThi", "LinhVucThi")
                        .WithMany("DeThi")
                        .HasForeignKey("LinhVucThiId");
                });

            modelBuilder.Entity("CMS.Core.Entities.HienThiDeThi", b =>
                {
                    b.HasOne("CMS.Core.Entities.DeThi", "DeThi")
                        .WithMany("HienThiDeThi")
                        .HasForeignKey("DeThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CMS.Core.Entities.HocVien", b =>
                {
                    b.HasOne("CMS.Core.Entities.QuanHuyen", "QuanHuyen")
                        .WithMany("HocVien")
                        .HasForeignKey("QuanHuyenId");

                    b.HasOne("CMS.Core.Entities.TinhThanh", "TinhThanh")
                        .WithMany("HocVien")
                        .HasForeignKey("TinhThanhId");

                    b.HasOne("CMS.Core.Entities.TruongDaiHoc", "TruongDaiHoc")
                        .WithMany("HocVien")
                        .HasForeignKey("TruongDaiHocId");

                    b.HasOne("CMS.Core.Entities.XaPhuong", "XaPhuong")
                        .WithMany("HocVien")
                        .HasForeignKey("XaPhuongId");
                });

            modelBuilder.Entity("CMS.Core.Entities.KyNang", b =>
                {
                    b.HasOne("CMS.Core.Entities.NhomKyNang", "NhomKyNang")
                        .WithMany("KyNang")
                        .HasForeignKey("NhomKyNangId");
                });

            modelBuilder.Entity("CMS.Core.Entities.KyNangUngVien", b =>
                {
                    b.HasOne("CMS.Core.Entities.KyNang", "KyNang")
                        .WithMany("KyNangUngVien")
                        .HasForeignKey("KyNangId");

                    b.HasOne("CMS.Core.Entities.UngVien", "UngVien")
                        .WithMany("KyNangUngVien")
                        .HasForeignKey("UngVienId");
                });

            modelBuilder.Entity("CMS.Core.Entities.LichSuChiTietCongViec", b =>
                {
                    b.HasOne("CMS.Core.Entities.ChiTietCongViec", "ChiTietCongViec")
                        .WithMany("LichSuChiTietCongViec")
                        .HasForeignKey("ChiTietCongViecId");

                    b.HasOne("CMS.Core.Entities.ThanhVienDuAn", "ThanhVienDuAn")
                        .WithMany("LichSuChiTietCongViec")
                        .HasForeignKey("ThanhVienDuAnId");

                    b.HasOne("CMS.Core.Entities.TrangThai", "TrangThai")
                        .WithMany("LichSuChiTietCongViec")
                        .HasForeignKey("TrangThaiId");
                });

            modelBuilder.Entity("CMS.Core.Entities.NguonDeThi", b =>
                {
                    b.HasOne("CMS.Core.Entities.DeThi", "DeThi")
                        .WithMany("NguonDeThi")
                        .HasForeignKey("DeThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Core.Entities.KhoCauHoi", "KhoCauHoi")
                        .WithMany()
                        .HasForeignKey("KhoCauHoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CMS.Core.Entities.PhanViec", b =>
                {
                    b.HasOne("CMS.Core.Entities.CongViec", "CongViec")
                        .WithMany("PhanViec")
                        .HasForeignKey("CongViecId");

                    b.HasOne("CMS.Core.Entities.ThanhVienDuAn", "ThanhVienDuAn")
                        .WithMany("PhanViec")
                        .HasForeignKey("ThanhVienDuAnId");
                });

            modelBuilder.Entity("CMS.Core.Entities.QuaTrinhHocTap", b =>
                {
                    b.HasOne("CMS.Core.Entities.CVUngVien", "CVUngVien")
                        .WithMany("QuaTrinhHocTap")
                        .HasForeignKey("CVUngVienId");
                });

            modelBuilder.Entity("CMS.Core.Entities.QuaTrinhLamDuAn", b =>
                {
                    b.HasOne("CMS.Core.Entities.CVUngVien", "CVUngVien")
                        .WithMany("QuaTrinhLamDuAn")
                        .HasForeignKey("CVUngVienId");
                });

            modelBuilder.Entity("CMS.Core.Entities.QuanHuyen", b =>
                {
                    b.HasOne("CMS.Core.Entities.TinhThanh", "TinhThanh")
                        .WithMany()
                        .HasForeignKey("TinhThanhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CMS.Core.Entities.QuyenDuAn", b =>
                {
                    b.HasOne("CMS.Core.Entities.DuAn", "DuAn")
                        .WithMany("QuyenDuAn")
                        .HasForeignKey("DuAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Core.Entities.Quyen", "Quyen")
                        .WithMany("QuyenDuAn")
                        .HasForeignKey("QuyenId");
                });

            modelBuilder.Entity("CMS.Core.Entities.ThanhVienDuAn", b =>
                {
                    b.HasOne("CMS.Core.Entities.HocVien", "HocVien")
                        .WithMany("ThanhVienDuAn")
                        .HasForeignKey("HocVienId");

                    b.HasOne("CMS.Core.Entities.QuyenDuAn", "QuyenDuAn")
                        .WithMany("ThanhVienDuAn")
                        .HasForeignKey("QuyenDuAnId");

                    b.HasOne("CMS.Core.Entities.UngVien", null)
                        .WithMany("ThanhVienDuAn")
                        .HasForeignKey("UngVienId");
                });

            modelBuilder.Entity("CMS.Core.Entities.TrangThaiDuAn", b =>
                {
                    b.HasOne("CMS.Core.Entities.DuAn", "DuAn")
                        .WithMany("TrangThaiDuAn")
                        .HasForeignKey("DuAnId");

                    b.HasOne("CMS.Core.Entities.TrangThai", "TrangThai")
                        .WithMany("TrangThaiDuAn")
                        .HasForeignKey("TrangThaiId");
                });

            modelBuilder.Entity("CMS.Core.Entities.UngTuyen", b =>
                {
                    b.HasOne("CMS.Core.Entities.BaiTuyenDung", "BaiTuyenDung")
                        .WithMany("UngTuyen")
                        .HasForeignKey("BaiTuyenDungId");

                    b.HasOne("CMS.Core.Entities.UngVien", "UngVien")
                        .WithMany("UngTuyen")
                        .HasForeignKey("UngVienId");
                });

            modelBuilder.Entity("CMS.Core.Entities.UngVien", b =>
                {
                    b.HasOne("CMS.Core.Entities.QuanHuyen", "QuanHuyen")
                        .WithMany()
                        .HasForeignKey("QuanHuyenId");

                    b.HasOne("CMS.Core.Entities.TinhThanh", "TinhThanh")
                        .WithMany()
                        .HasForeignKey("TinhThanhId");

                    b.HasOne("CMS.Core.Entities.TrangThai", "TrangThai")
                        .WithMany("UngVien")
                        .HasForeignKey("TrangThaiId");

                    b.HasOne("CMS.Core.Entities.TruongDaiHoc", "TruongDaiHoc")
                        .WithMany()
                        .HasForeignKey("TruongDaiHocId");

                    b.HasOne("CMS.Core.Entities.XaPhuong", "XaPhuong")
                        .WithMany()
                        .HasForeignKey("XaPhuongId");
                });

            modelBuilder.Entity("CMS.Core.Entities.UngVienLamBaiTest", b =>
                {
                    b.HasOne("CMS.Core.Entities.BaiTestTuyenDung", "BaiTestTuyenDung")
                        .WithMany()
                        .HasForeignKey("BaiTestTuyenDungId");

                    b.HasOne("CMS.Core.Entities.UngVien", "UngVien")
                        .WithMany("UngVienLamBaiTest")
                        .HasForeignKey("UngVienId");
                });

            modelBuilder.Entity("CMS.Core.Entities.XaPhuong", b =>
                {
                    b.HasOne("CMS.Core.Entities.QuanHuyen", "QuanHuyen")
                        .WithMany("XaPhuong")
                        .HasForeignKey("QuanHuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CMS.Core.Entities.YeuCau", b =>
                {
                    b.HasOne("CMS.Core.Entities.BaiTuyenDung", "BaiTuyenDung")
                        .WithMany("YeuCau")
                        .HasForeignKey("BaiTuyenDungId");

                    b.HasOne("CMS.Core.Entities.LoaiYeuCau", "LoaiYeuCau")
                        .WithMany("YeuCau")
                        .HasForeignKey("LoaiYeuCauId");
                });

            modelBuilder.Entity("CMS.Infrastructure.Data.ApplicationUserRole", b =>
                {
                    b.HasOne("CMS.Infrastructure.Data.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Infrastructure.Data.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("CMS.Infrastructure.Data.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CMS.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CMS.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CMS.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
