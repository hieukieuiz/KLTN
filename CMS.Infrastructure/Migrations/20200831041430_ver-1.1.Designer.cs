// <auto-generated />
using System;
using CMS.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CMS.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200831041430_ver-1.1")]
    partial class ver11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CMS.Core.Entities.BaoCao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChiTietCongViecId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThanhVienDuAnId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietCongViecId");

                    b.HasIndex("ThanhVienDuAnId");

                    b.ToTable("BaoCao");
                });

            modelBuilder.Entity("CMS.Core.Entities.ChiTietCongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CongViecId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChiTietCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CongViecId");

                    b.HasIndex("TrangThaiId");

                    b.ToTable("ChiTietCongViec");
                });

            modelBuilder.Entity("CMS.Core.Entities.CongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DoUuTien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DuAnId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("LoaiCongViecId")
                        .HasColumnType("int");

                    b.Property<string>("MoTaCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHoanThanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThanhVienDuAnId")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiId")
                        .HasColumnType("int");

                    b.Property<double>("TyLeHoanThanh")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.HasIndex("LoaiCongViecId");

                    b.HasIndex("ThanhVienDuAnId");

                    b.HasIndex("TrangThaiId");

                    b.ToTable("CongViec");
                });

            modelBuilder.Entity("CMS.Core.Entities.DuAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDuAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DuAn");
                });

            modelBuilder.Entity("CMS.Core.Entities.HocVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("Date");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TinhThanhId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TinhThanhId");

                    b.ToTable("HocVien");
                });

            modelBuilder.Entity("CMS.Core.Entities.LichSuChiTietCongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChiTietCongViecId")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThanhVienDuAnId")
                        .HasColumnType("int");

                    b.Property<int?>("ThuTu")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietCongViecId");

                    b.HasIndex("ThanhVienDuAnId");

                    b.HasIndex("TrangThaiId");

                    b.ToTable("LichSuChiTietCongViec");
                });

            modelBuilder.Entity("CMS.Core.Entities.LoaiCongViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenLoaiCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiCongViec");
                });

            modelBuilder.Entity("CMS.Core.Entities.PhanViec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CongViecId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayPhanViec")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThanhVienDuAnId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CongViecId");

                    b.HasIndex("ThanhVienDuAnId");

                    b.ToTable("PhanViec");
                });

            modelBuilder.Entity("CMS.Core.Entities.Quyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenQuyen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quyen");
                });

            modelBuilder.Entity("CMS.Core.Entities.QuyenDuAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DuAnId")
                        .HasColumnType("int");

                    b.Property<int?>("QuyenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.HasIndex("QuyenId");

                    b.ToTable("QuyenDuAn");
                });

            modelBuilder.Entity("CMS.Core.Entities.ThanhVienDuAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HocVienId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayThamGia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QuyenDuAnId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HocVienId");

                    b.HasIndex("QuyenDuAnId");

                    b.ToTable("ThanhVienDuAn");
                });

            modelBuilder.Entity("CMS.Core.Entities.TinhThanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTinhThanh")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("TinhThanh");
                });

            modelBuilder.Entity("CMS.Core.Entities.TrangThai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrangThai");
                });

            modelBuilder.Entity("CMS.Core.Entities.TrangThaiDuAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DuAnId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrangThaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.HasIndex("TrangThaiId");

                    b.ToTable("TrangThaiDuAn");
                });

            modelBuilder.Entity("CMS.Infrastructure.Data.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("CMS.Infrastructure.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("CMS.Infrastructure.Data.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CMS.Core.Entities.BaoCao", b =>
                {
                    b.HasOne("CMS.Core.Entities.ChiTietCongViec", "ChiTietCongViec")
                        .WithMany("BaoCao")
                        .HasForeignKey("ChiTietCongViecId");

                    b.HasOne("CMS.Core.Entities.ThanhVienDuAn", "ThanhVienDuAn")
                        .WithMany("BaoCao")
                        .HasForeignKey("ThanhVienDuAnId");
                });

            modelBuilder.Entity("CMS.Core.Entities.ChiTietCongViec", b =>
                {
                    b.HasOne("CMS.Core.Entities.CongViec", "CongViec")
                        .WithMany("ChiTietCongViec")
                        .HasForeignKey("CongViecId");

                    b.HasOne("CMS.Core.Entities.TrangThai", "TrangThai")
                        .WithMany("ChiTietCongViec")
                        .HasForeignKey("TrangThaiId");
                });

            modelBuilder.Entity("CMS.Core.Entities.CongViec", b =>
                {
                    b.HasOne("CMS.Core.Entities.DuAn", "DuAn")
                        .WithMany("CongViec")
                        .HasForeignKey("DuAnId");

                    b.HasOne("CMS.Core.Entities.LoaiCongViec", "LoaiCongViec")
                        .WithMany("CongViec")
                        .HasForeignKey("LoaiCongViecId");

                    b.HasOne("CMS.Core.Entities.ThanhVienDuAn", "ThanhVienDuAn")
                        .WithMany("CongViec")
                        .HasForeignKey("ThanhVienDuAnId");

                    b.HasOne("CMS.Core.Entities.TrangThai", "TrangThai")
                        .WithMany("CongViec")
                        .HasForeignKey("TrangThaiId");
                });

            modelBuilder.Entity("CMS.Core.Entities.HocVien", b =>
                {
                    b.HasOne("CMS.Core.Entities.TinhThanh", "TinhThanh")
                        .WithMany("HocVien")
                        .HasForeignKey("TinhThanhId");
                });

            modelBuilder.Entity("CMS.Core.Entities.LichSuChiTietCongViec", b =>
                {
                    b.HasOne("CMS.Core.Entities.ChiTietCongViec", "ChiTietCongViec")
                        .WithMany("LichSuChiTietCongViec")
                        .HasForeignKey("ChiTietCongViecId");

                    b.HasOne("CMS.Core.Entities.ThanhVienDuAn", "ThanhVienDuAn")
                        .WithMany("LichSuChiTietCongViec")
                        .HasForeignKey("ThanhVienDuAnId");

                    b.HasOne("CMS.Core.Entities.TrangThai", "TrangThai")
                        .WithMany("LichSuChiTietCongViec")
                        .HasForeignKey("TrangThaiId");
                });

            modelBuilder.Entity("CMS.Core.Entities.PhanViec", b =>
                {
                    b.HasOne("CMS.Core.Entities.CongViec", "CongViec")
                        .WithMany("PhanViec")
                        .HasForeignKey("CongViecId");

                    b.HasOne("CMS.Core.Entities.ThanhVienDuAn", "ThanhVienDuAn")
                        .WithMany("PhanViec")
                        .HasForeignKey("ThanhVienDuAnId");
                });

            modelBuilder.Entity("CMS.Core.Entities.QuyenDuAn", b =>
                {
                    b.HasOne("CMS.Core.Entities.DuAn", "DuAn")
                        .WithMany("QuyenDuAn")
                        .HasForeignKey("DuAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Core.Entities.Quyen", "Quyen")
                        .WithMany("QuyenDuAn")
                        .HasForeignKey("QuyenId");
                });

            modelBuilder.Entity("CMS.Core.Entities.ThanhVienDuAn", b =>
                {
                    b.HasOne("CMS.Core.Entities.HocVien", "HocVien")
                        .WithMany("ThanhVienDuAn")
                        .HasForeignKey("HocVienId");

                    b.HasOne("CMS.Core.Entities.QuyenDuAn", "QuyenDuAn")
                        .WithMany("ThanhVienDuAn")
                        .HasForeignKey("QuyenDuAnId");
                });

            modelBuilder.Entity("CMS.Core.Entities.TrangThaiDuAn", b =>
                {
                    b.HasOne("CMS.Core.Entities.DuAn", "DuAn")
                        .WithMany("TrangThaiDuAn")
                        .HasForeignKey("DuAnId");

                    b.HasOne("CMS.Core.Entities.TrangThai", "TrangThai")
                        .WithMany("TrangThaiDuAn")
                        .HasForeignKey("TrangThaiId");
                });

            modelBuilder.Entity("CMS.Infrastructure.Data.ApplicationUserRole", b =>
                {
                    b.HasOne("CMS.Infrastructure.Data.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS.Infrastructure.Data.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("CMS.Infrastructure.Data.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CMS.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CMS.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CMS.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
